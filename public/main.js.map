{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/components/editor/editor.component.css","webpack:///./src/app/components/editor/editor.component.html","webpack:///./src/app/components/editor/editor.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/new-problem/new-problem.component.css","webpack:///./src/app/components/new-problem/new-problem.component.html","webpack:///./src/app/components/new-problem/new-problem.component.ts","webpack:///./src/app/components/problem-detail/problem-detail.component.css","webpack:///./src/app/components/problem-detail/problem-detail.component.html","webpack:///./src/app/components/problem-detail/problem-detail.component.ts","webpack:///./src/app/components/problem-list/problem-list.component.css","webpack:///./src/app/components/problem-list/problem-list.component.html","webpack:///./src/app/components/problem-list/problem-list.component.ts","webpack:///./src/app/pipes/search.pipe.ts","webpack:///./src/app/services/collaboration.service.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/app/services/input.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'oj-client';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'; // angular need this to send http request to server\nimport { ReactiveFormsModule } from '@angular/forms';\n\n//import { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nimport { routing } from './app.routes';\nimport { NewProblemComponent } from './components/new-problem/new-problem.component';\nimport { EditorComponent } from './components/editor/editor.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { SearchPipe } from './pipes/search.pipe';\nimport {CollaborationService } from './services/collaboration.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProblemListComponent,\n    ProblemDetailComponent,\n    NewProblemComponent,\n    EditorComponent,\n    NavbarComponent,\n    SearchPipe\n  ],\n  imports: [\n    BrowserModule,\n    //AppRoutingModule,\n    routing,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [CollaborationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Routes, RouterModule } from '@angular/router';\nimport { ProblemListComponent } from './components/problem-list/problem-list.component';\nimport { ProblemDetailComponent } from './components/problem-detail/problem-detail.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tredirectTo: 'problems',\n\t\tpathMatch: 'full'\n\n\t},\n\t{\n\t\tpath: 'problems',\n\t\tcomponent: ProblemListComponent\n\t},\n\t{\n\t\tpath: 'problems/:id', // :id is parameter e.g. problems/1 (id=1) component: ProblemDetailComponent\n\t\tcomponent: ProblemDetailComponent\n\t},\n\t{\n\t\tpath: '**',\n\t\tredirectTo: 'problems'\n\t}\n\n]\n\nexport const routing = RouterModule.forRoot(routes);","module.exports = \"@media screen { \\n #editor { \\n   height: 600px; \\n } \\n\\n .lang-select { \\n   width: 100px; \\n   margin-right: 10px; \\n } \\n\\n header .btn { \\n   margin: 0 5px; \\n } \\n\\n footer .btn { \\n   margin: 0 5px; \\n } \\n\\n .editor-footer, .editor-header { \\n   margin: 10px 0; \\n } \\n\\n .cursor { \\n   /*position:absolute;*/ \\n   background: rgba(0, 250, 0, 0.5); \\n   z-index: 40; \\n   width: 2px!important \\n } \\n} \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9lZGl0b3IvZWRpdG9yLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Q0FDQztHQUNFLGFBQWE7Q0FDZjs7Q0FFQTtHQUNFLFlBQVk7R0FDWixrQkFBa0I7Q0FDcEI7O0NBRUE7R0FDRSxhQUFhO0NBQ2Y7O0NBRUE7R0FDRSxhQUFhO0NBQ2Y7O0NBRUE7R0FDRSxjQUFjO0NBQ2hCOztDQUVBO0dBQ0UscUJBQXFCO0dBQ3JCLGdDQUFnQztHQUNoQyxXQUFXO0dBQ1g7Q0FDRjtBQUNEIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9lZGl0b3IvZWRpdG9yLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAbWVkaWEgc2NyZWVuIHsgXG4gI2VkaXRvciB7IFxuICAgaGVpZ2h0OiA2MDBweDsgXG4gfSBcblxuIC5sYW5nLXNlbGVjdCB7IFxuICAgd2lkdGg6IDEwMHB4OyBcbiAgIG1hcmdpbi1yaWdodDogMTBweDsgXG4gfSBcblxuIGhlYWRlciAuYnRuIHsgXG4gICBtYXJnaW46IDAgNXB4OyBcbiB9IFxuXG4gZm9vdGVyIC5idG4geyBcbiAgIG1hcmdpbjogMCA1cHg7IFxuIH0gXG5cbiAuZWRpdG9yLWZvb3RlciwgLmVkaXRvci1oZWFkZXIgeyBcbiAgIG1hcmdpbjogMTBweCAwOyBcbiB9IFxuXG4gLmN1cnNvciB7IFxuICAgLypwb3NpdGlvbjphYnNvbHV0ZTsqLyBcbiAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMjUwLCAwLCAwLjUpOyBcbiAgIHotaW5kZXg6IDQwOyBcbiAgIHdpZHRoOiAycHghaW1wb3J0YW50IFxuIH0gXG59ICJdfQ== */\"","module.exports = \"<section>\\n  <header class=\\\"editor-header\\\">\\n    <div class=\\\"row\\\">\\n    \\t<!--the \\\"name= 'language'\\\" is not used by .ts file yet  -->\\n      <select class=\\\"form-control pull-left lang-select\\\" name=\\\"language\\\" \\n        [(ngModel)]=\\\"language\\\" (change)=\\\"setLanguage(language)\\\">  <!--both \\\"language\\\" refers to \\\"language\\\" defined in .ts in the beginning-->\\n      <option *ngFor=\\\"let language of languages\\\" [value]=\\\"language\\\"> <!-- the singular \\\"language\\\" here is a local variable and can be defined as anything; the plural \\\"languages\\\" here is defined in .ts file-->\\n        {{language}} <!-- this language is set in .ts as language: string = \\\"java\\\" -->\\n      </option>\\n      </select>\\n      <!--reset button -->\\n      <!-- Button trigger modal -->\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\">\\n        Reset\\n      </button>\\n\\n      <!-- Modal -->\\n      <div class=\\\"modal fade\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"exampleModalLabel\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n          <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h5 class=\\\"modal-title\\\" id=\\\"exampleModalLabel\\\">Are you sure</h5>\\n              <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              You will lose current code in the editor, are you sure?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n              <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\"\\n              (click)=\\\"resetEditor()\\\">Reset</button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </header>\\n\\n  <div id=\\\"editor\\\">\\n  </div><!-- This is the body -->\\n\\n  <div>\\n    {{output}}\\n  </div>\\n  \\n  <footer class=\\\"editor-footer\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-success pull-right\\\" \\n      (click)=\\\"submit()\\\">Submit Solution</button>\\n  </footer>\\n</section>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router'; // import router to get session id\nimport {CollaborationService } from '../../services/collaboration.service';\nimport { DataService } from '../../services/data.service';\nimport { Subscription } from 'rxjs';\n\ndeclare var ace: any; // import ace by declaring a variable to reference the ace.js imported in angular jason\n\n@Component({\n  selector: 'app-editor',\n  templateUrl: './editor.component.html',\n  styleUrls: ['./editor.component.css']\n})\nexport class EditorComponent implements OnInit {\n\teditor: any;\n\n\tsessionId: string;\n\n  output: string = '';\n\t\n\tpublic languages: string[] = ['Java', 'Python'];\n\tlanguage: string = 'Java';\n\n\tdefaultContent = {\n    \"Java\": ` public class Example {\n       public static void main(String[] args) {\n        // Type your Java code here\n       }\n\t}`,\n\t\"Python\": `class Solution:\n\t\tdef example():\n\t\t\t#Write your Python code here`\n }; //use `` to write multi-line text\n  \n  constructor(private collaboration: CollaborationService, private route: ActivatedRoute, private dataService: DataService) { }\n\n  ngOnInit() {\n\n\n  \tthis.route.params.subscribe(\n  \t\tparams => {\n  \t\t\tthis.sessionId = params['id']; // make problem id in the url the \"sessionID\"\n  \t\t\tthis.initEditor();\n  \t\t})\n      this.collaboration.restoreBuffer();\n  }\n\n  initEditor(): void {\n  \tthis.editor = ace.edit('editor'); // the second \"editor\" is the id in \"editor.component.html\"\n  \tthis.editor.setTheme(\"ace/theme/eclipse\"); // what's the view like\n  \t\n  \tthis.resetEditor();\n\n  \tdocument.getElementsByTagName('textarea')[0].focus(); //set focus to textarea in case it moves to other objects\n\n  \tthis.collaboration.init(this.editor, this.sessionId);// conduct handshake with server by using collaboration service; pass \"editor\" and \"sessionId\" to collaboration service\n  \t\n  \t// receive changes sent by server\n  \tthis.editor.lastAppliedChange = null; \n\n\n  \tthis.editor.on('change', (e) => {\n  \t\tconsole.log('editor changes: ' + JSON.stringify(e));\n  \t\t// once receives any change, check if the change event \"e\" is the lastAppliedChange; if not, pass to collaboration service to further pass to server, so that the change event can be used\n  \t\tif (this.editor.lastAppliedChange != e ) {\n  \t\t\tthis.collaboration.change(JSON.stringify(e));\n  \t\t}\n\n  \t})         \n\n\n  }\n\n  resetEditor(): void {\n  \tthis.editor.setValue(this.defaultContent[this.language]);\n  \tthis.editor.getSession().setMode(\"ace/mode/\" + this.language.toLowerCase()); // set programming language\n  }\n\n  setLanguage(language: string): void { // this language here can be named as anything and it is a local thing\n  \tthis.language = language; \n  \tthis.resetEditor();\n  }\n\n  submit(): void {\n  \tlet usercode = this.editor.getValue();\n  \tconsole.log(usercode);\n\n    const data = {\n    code: usercode,\n    lang: this.language.toLowerCase()\n    }\n\n    this.dataService.buildAndRun(data).then(res => this.output = res);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">{{ title }}</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"#\\\" id=\\\"navbarDropdown\\\" role=\\\"button\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n          Dropdown\\n        </a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"navbarDropdown\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\n          <div class=\\\"dropdown-divider\\\"></div>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n        </div>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\" [formControl] = \\\"searchBox\\\">\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { InputService } from '../../services/input.service';\nimport { debounceTime } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n\ttitle = \"COJ\";\n\n\tsearchBox: FormControl = new FormControl();\n\tsubscription: Subscription;\n  \n  constructor(private input: InputService, private router: Router) { }\n\n  ngOnInit() {\n  \t// the code below is to publish the term to input service whenever it changes in navbar\n  \tthis.subscription = this.searchBox\n  \t\t\t\t\t\t\t.valueChanges //this is a value change event\n  \t\t\t\t\t\t\t.pipe(debounceTime(200)) // wait for 200 ms in case the input hasn't been finished by clients\n  \t\t\t\t\t\t\t.subscribe(term => this.input.changeInput(term)); // 拿到term，利用input service中的function，对term进行publish\n  }\n\n  ngOnDestroy () {\n  \tthis.subscription.unsubscribe();\n  }\n\n// purpose for the code below?\n   searchProblem(): void {\n  \tthis.router.navigate(['/problems']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmV3LXByb2JsZW0vbmV3LXByb2JsZW0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\n\\t<form #formRef=\\\"ngForm\\\">\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"problemName\\\">Problem Name</label>\\n\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemName\\\"\\n\\t\\t\\t\\tname=\\\"problemName\\\" placeholder=\\\"Input problem name\\\" required\\n\\t\\t\\t\\t[(ngModel)]=\\\"newProblem.name\\\"> <!--two-way binding -->\\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"problemDesc\\\">Problem Description</label> <textarea type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"problemDesc\\\"\\n\\t\\t\\t\\tname=\\\"problemDesc\\\" placeholder=\\\"Input description\\\" required\\n\\t\\t\\t\\t[(ngModel)]=\\\"newProblem.desc\\\"> </textarea> \\n\\t\\t</div>\\n\\t\\t<div class=\\\"form-group\\\">\\n\\t\\t\\t<label for=\\\"difficulty\\\">Difficulty</label>\\n\\t\\t\\t<select class=\\\"form-control\\\" id=\\\"difficulty\\\" name=\\\"difficulty\\\"\\n\\t\\t\\t\\t[(ngModel)]=\\\"newProblem.difficulty\\\">\\n\\t\\t\\t\\t<option *ngFor=\\\"let difficulty of difficulties\\\" [value]=\\\"difficulty\\\">\\n             \\t{{difficulty}}\\n          \\t \\t</option>\\n         \\t</select>\\n       </div>\\n\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t<div class=\\\"col-md-12\\\">\\n\\t\\t\\t\\t<button type=\\\"submit\\\" class=\\\"btn btn-primary pull-right\\\" (click)=\\\"addProblem()\\\"> <!--one-way binding -->Add problem</button>\\n         \\t</div>\\n       </div>\\n\\t</form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\nconst DEFAULT_PROBLEM: Problem = Object.freeze({ // \"Object.freeze\" prevents the modification of existing property attributes and values and prevents the addition of new properties\n\tid: 0,\n\tname: '',\n\tdesc: '',\n\tdifficulty: 'easy'\n})\n\n\n@Component({\n  selector: 'app-new-problem',\n  templateUrl: './new-problem.component.html',\n  styleUrls: ['./new-problem.component.css']\n})\nexport class NewProblemComponent implements OnInit {\n  newProblem: Problem = Object.assign({}, DEFAULT_PROBLEM); //.assign is to copy the value to the targeted variable\n  difficulties: string[] = ['easy','medium','hard','super'];\n  constructor(private dataService: DataService) { }\n\n  ngOnInit() {\n  }\n\n  addProblem() {\n  \tthis.dataService.addProblem(this.newProblem);\n  \tthis.newProblem = Object.assign({}, DEFAULT_PROBLEM);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvYmxlbS1kZXRhaWwvcHJvYmxlbS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"problem\\\">\\n\\t<div class=\\\"row\\\">\\n\\t\\t<div class=\\\"col-sm-12 col-md-4\\\"> \\n\\t\\t\\t<div>\\n\\t\\t\\t\\t<h2> \\n\\t\\t\\t\\t\\t{{problem.id}}.{{problem.name}}\\n\\t\\t\\t\\t</h2> \\n\\t\\t\\t\\t<p>\\n\\t       \\t\\t\\t{{problem.desc}}\\n\\t     \\t\\t</p>\\n\\t\\t\\t</div>\\n\\t \\t</div>\\n\\t \\t<div class=\\\"hidden-xs col-sm-12 col-md-8\\\"> <!-- \\\"hidden-xs\\\" do not show the editor when the screen is too small -->\\n\\t \\t\\t<app-editor></app-editor>\\n\\t \\t</div>\\n \\t</div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Problem } from '../../models/problem.model';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-problem-detail',\n  templateUrl: './problem-detail.component.html',\n  styleUrls: ['./problem-detail.component.css']\n})\nexport class ProblemDetailComponent implements OnInit {\n  problem: Problem;\n  constructor(private dataService: DataService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      //this.problem = this.dataService.getProblem(+params['id']);\n      this.dataService.getProblem(+params['id'])\n        .then(problem => this.problem = problem);\n    });\n  }\n\n}\n","module.exports = \".difficult {\\n  min-width: 65px;\\n  margin-right: 18px;\\n}\\n.badge.difficulty {\\n  padding-top: 0.6em;\\n  color: #fbfdfa;\\n  font-size: 12px;\\n}\\n.title {\\n  font-size: 1.2em;\\n}\\n.diff-easy { \\n  background-color: #42ebf4;\\n}\\n.diff-medium {\\n  background-color: #92cf5c; \\n}\\n.diff-hard { \\n  background-color: #FF0000;\\n}\\n.diff-super {\\n  background-color: #8d16e2; \\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9ibGVtLWxpc3QvcHJvYmxlbS1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxlQUFlO0VBQ2Ysa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxrQkFBa0I7RUFDbEIsY0FBYztFQUNkLGVBQWU7QUFDakI7QUFDQTtFQUNFLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UseUJBQXlCO0FBQzNCO0FBQ0E7RUFDRSx5QkFBeUI7QUFDM0I7QUFDQTtFQUNFLHlCQUF5QjtBQUMzQjtBQUNBO0VBQ0UseUJBQXlCO0FBQzNCIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9wcm9ibGVtLWxpc3QvcHJvYmxlbS1saXN0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGlmZmljdWx0IHtcbiAgbWluLXdpZHRoOiA2NXB4O1xuICBtYXJnaW4tcmlnaHQ6IDE4cHg7XG59XG4uYmFkZ2UuZGlmZmljdWx0eSB7XG4gIHBhZGRpbmctdG9wOiAwLjZlbTtcbiAgY29sb3I6ICNmYmZkZmE7XG4gIGZvbnQtc2l6ZTogMTJweDtcbn1cbi50aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS4yZW07XG59XG4uZGlmZi1lYXN5IHsgXG4gIGJhY2tncm91bmQtY29sb3I6ICM0MmViZjQ7XG59XG4uZGlmZi1tZWRpdW0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTJjZjVjOyBcbn1cbi5kaWZmLWhhcmQgeyBcbiAgYmFja2dyb3VuZC1jb2xvcjogI0ZGMDAwMDtcbn1cbi5kaWZmLXN1cGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzhkMTZlMjsgXG59Il19 */\"","module.exports = \"<div class=\\\"container\\\">\\n\\t<app-new-problem></app-new-problem>\\n\\t<div class=\\\"list-group\\\">\\n\\t\\t<a class=\\\"list-group-item\\\" *ngFor=\\\"let problem of (problems | search: searchTerm)\\\" \\n\\t\\t\\t[routerLink]=\\\"['/problems', problem.id]\\\"> <!-- \\\"(problems | search: searchTerm)\\\" first \\\"problems\\\" is the first parameter in pipe.ts; while search is the second parameter-->\\n\\t\\t\\t<span\\n\\t\\t\\t\\tclass=\\\"{{'pull-left badge difficulty diff-' + problem.difficulty.toLocaleLowerCase()}}\\\">\\n\\t\\t\\t\\t{{problem.difficulty}}\\t\\t\\t\\n\\t\\t\\t</span>\\n\\t\\t\\t<strong class=\\\"title\\\">{{problem.id}}.{{problem.name}}</strong>\\n\\t\\t</a>\\n\\t</div>\\n</div>\\n\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core'; //\"OnDestory\" for unsubscribe\nimport { Subscription } from 'rxjs';\nimport { Problem } from '../../models/problem.model'; \n\n//import { PROBLEMS } from '../../mock-problems'; \nimport { DataService } from '../../services/data.service';\nimport { InputService } from '../../services/input.service' ;\n\n\n@Component({\n  selector: 'app-problem-list',\n  templateUrl: './problem-list.component.html',\n  styleUrls: ['./problem-list.component.css']\n})\nexport class ProblemListComponent implements OnInit, OnDestroy {\n\tproblems: Problem[];\n  subscriptionProblems: Subscription;\n\n  searchTerm: string='';\n  subscriptionInput: Subscription;\n\n  constructor(private dataService: DataService, private inputService: InputService) { }\n\n  ngOnInit() {\n  \tthis.getProblems();\n    this.getSearchTerm();\n  }\n\n  ngOnDestroy(){\n    this.subscriptionProblems.unsubscribe();\n  }\n  getProblems() {\n  \t//this.problems = PROBLEMS;\n    //this.problems = this.dataService.getProblems();\n    \n    //.getProblems() with server now is asynchronous operation\n    // I will wait whenever I can get the data, so I \"subscribe\"\n    // when I have the data, the operation I will run is to \n    // pass \"problems\" I subscribe to to \"problems\" I defined earlier in the file\n    this.subscriptionProblems = this.dataService.getProblems()   \n      .subscribe(problems => this.problems = problems);\n  }\n\n  getSearchTerm() {\n    this.subscriptionInput = this.inputService.getInput() \n      .subscribe(inputTerm => this.searchTerm = inputTerm); // pass inputTerm to searchTerm defined local here in problem-list ts file\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { Problem } from '../models/problem.model';\n\n@Pipe({\n  name: 'search'\n})\nexport class SearchPipe implements PipeTransform {\n\n  transform(problems: Problem[], term: string): Problem[] {\n    \n    return problems.filter(\n    \tproblem => problem.name.toLowerCase().includes(term.toLowerCase()));\n  }\n\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\ndeclare var io: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollaborationService {\n  collaborationSocket: any;\n  private _userSource = new Subject<string>();\n\n  constructor() { }\n\n  init(editor: any, sessionId: string): Observable<string> {\n    this.collaborationSocket = io(window.location.origin, { query: 'sessionId=' + sessionId});\n\n    this.collaborationSocket.on(\"change\", (delta: string) => {\n      console.log('collaboration: editor changes by ' + delta);\n      delta = JSON.parse(delta);\n      editor.lastAppliedChange = delta;\n      editor.getSession().getDocument().applyDeltas([delta]);\n    });\n\n    this.collaborationSocket.on(\"userChange\", (data: string[]) => {\n      console.log('collaboration user change: ' + data);\n      this._userSource.next(data.toString());\n    });\n\n    return this._userSource.asObservable();\n  }\n\n  change(delta: string): void {\n    this.collaborationSocket.emit('change', delta);\n  }\n\n  restoreBuffer(): void {\n    this.collaborationSocket.emit(\"restoreBuffer\");\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { Problem } from '../models/problem.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  private _problemSource = new BehaviorSubject<Problem[]>([]);\n  constructor(private httpClient: HttpClient) { }\n\n  // getProblems(): Problem[] {\n  //   return this.problems;\n  // }\n\n  // getProblem(id: number): Problem {\n  //   return this.problems.find( (problem) => problem.id === id );\n  // }\n\n  // addProblem(problem: Problem) {\n  //   problem.id = this.problems.length + 1;\n  //   this.problems.push(problem);\n  // }\n\n  getProblems(): Observable<Problem[]> {\n    this.httpClient.get('api/v1/problems')\n      .toPromise()\n      .then((res: any) => {\n        this._problemSource.next(res);\n      })\n      .catch(this.handleError);\n\n      return this._problemSource.asObservable();\n  }\n\n  getProblem(id: number): Promise<Problem> {\n    //assert.fail('not smart enough');\n    //$log.log( 'api/v1/problems/' + String(id)  );\n    return this.httpClient.get(`api/v1/problems/${id}`)\n      .toPromise()\n      .then((res: any) => res)\n      .catch(this.handleError);\n  }\n\n  addProblem(problem: Problem) {\n    const options = { headers: new HttpHeaders({'Content-Type': \"application/json\"})};\n    return this.httpClient.post('api/v1/problems', problem, options)\n      .toPromise()\n      .then((res: any) => {\n        this.getProblems();\n\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n    buildAndRun(data): Promise<any> {\n    const options = { headers: new HttpHeaders({'Content-Type': \"application/json\"})};\n\n    return this.httpClient.post('api/v1/build_and_run', data, options)\n      .toPromise()\n      .then(res => {\n        console.log(res);\n        return res;\n      })\n      .catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    return Promise.reject(error.body || error);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InputService {\n\tprivate inputSubject$ = new BehaviorSubject<string>(''); // \"$\" sign means it is a string; define what others will get when they subscribe to this service\n\n  constructor() { }\n\n  changeInput(term) {\n  \tthis.inputSubject$.next(term); // how will the term be published to the input service; so that inputSubject will be able to send out the term to the subscriber; the subscriber will get the term of whatever it is\n  }\n\n  getInput(): Observable<string> { // As \"inputSubject$\" is a local variable, we need define a function to let others get \"inputSubject$\"\n  \treturn this.inputSubject$.asObservable();\n  }\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}